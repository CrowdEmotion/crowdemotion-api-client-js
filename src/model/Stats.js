/**
 * CloudEmotion API v1
 * CrowdEmotion API
 *
 * OpenAPI spec version: 1.1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.CrowdemotionApiClientJs) {
      root.CrowdemotionApiClientJs = {};
    }
    root.CrowdemotionApiClientJs.Stats = factory(root.CrowdemotionApiClientJs.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The Stats model module.
   * @module model/Stats
   * @version 1.1.0
   */

  /**
   * Constructs a new <code>Stats</code>.
   * @alias module:model/Stats
   * @class
   * @param media {Integer} 
   * @param visited {Integer} 
   * @param started {Integer} 
   * @param partial {Integer} 
   * @param completes {Integer} 
   * @param processed {Integer} 
   * @param failed {Integer} 
   * @param unprocessed {Integer} 
   * @param lastUpdated {String} 
   */
  var exports = function(media, visited, started, partial, completes, processed, failed, unprocessed, lastUpdated) {
    var _this = this;

    _this['media'] = media;
    _this['visited'] = visited;
    _this['started'] = started;
    _this['partial'] = partial;
    _this['completes'] = completes;
    _this['processed'] = processed;
    _this['failed'] = failed;
    _this['unprocessed'] = unprocessed;
    _this['lastUpdated'] = lastUpdated;
  };

  /**
   * Constructs a <code>Stats</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Stats} obj Optional instance to populate.
   * @return {module:model/Stats} The populated <code>Stats</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('media')) {
        obj['media'] = ApiClient.convertToType(data['media'], 'Integer');
      }
      if (data.hasOwnProperty('visited')) {
        obj['visited'] = ApiClient.convertToType(data['visited'], 'Integer');
      }
      if (data.hasOwnProperty('started')) {
        obj['started'] = ApiClient.convertToType(data['started'], 'Integer');
      }
      if (data.hasOwnProperty('partial')) {
        obj['partial'] = ApiClient.convertToType(data['partial'], 'Integer');
      }
      if (data.hasOwnProperty('completes')) {
        obj['completes'] = ApiClient.convertToType(data['completes'], 'Integer');
      }
      if (data.hasOwnProperty('processed')) {
        obj['processed'] = ApiClient.convertToType(data['processed'], 'Integer');
      }
      if (data.hasOwnProperty('failed')) {
        obj['failed'] = ApiClient.convertToType(data['failed'], 'Integer');
      }
      if (data.hasOwnProperty('unprocessed')) {
        obj['unprocessed'] = ApiClient.convertToType(data['unprocessed'], 'Integer');
      }
      if (data.hasOwnProperty('lastUpdated')) {
        obj['lastUpdated'] = ApiClient.convertToType(data['lastUpdated'], 'String');
      }
    }
    return obj;
  }

  /**
   * 
   * @member {Integer} media
   */
  exports.prototype['media'] = undefined;
  /**
   * 
   * @member {Integer} visited
   */
  exports.prototype['visited'] = undefined;
  /**
   * 
   * @member {Integer} started
   */
  exports.prototype['started'] = undefined;
  /**
   * 
   * @member {Integer} partial
   */
  exports.prototype['partial'] = undefined;
  /**
   * 
   * @member {Integer} completes
   */
  exports.prototype['completes'] = undefined;
  /**
   * 
   * @member {Integer} processed
   */
  exports.prototype['processed'] = undefined;
  /**
   * 
   * @member {Integer} failed
   */
  exports.prototype['failed'] = undefined;
  /**
   * 
   * @member {Integer} unprocessed
   */
  exports.prototype['unprocessed'] = undefined;
  /**
   * 
   * @member {String} lastUpdated
   */
  exports.prototype['lastUpdated'] = undefined;



  return exports;
}));


