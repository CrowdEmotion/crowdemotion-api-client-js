/**
 * CloudEmotion API v1
 * CrowdEmotion API
 *
 * OpenAPI spec version: 1.1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.CrowdemotionApiClientJs) {
      root.CrowdemotionApiClientJs = {};
    }
    root.CrowdemotionApiClientJs.Response = factory(root.CrowdemotionApiClientJs.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The Response model module.
   * @module model/Response
   * @version 1.1.0
   */

  /**
   * Constructs a new <code>Response</code>.
   * @alias module:model/Response
   * @class
   * @param id {Integer} 
   * @param timeCreated {Date} 
   * @param researchId {Integer} 
   * @param mediaId {Integer} 
   * @param respondentId {Integer} 
   * @param userId {Integer} 
   * @param complete {Boolean} 
   * @param used {Boolean} 
   * @param companyId {Integer} 
   */
  var exports = function(id, timeCreated, researchId, mediaId, respondentId, userId, complete, used, companyId) {
    var _this = this;

    _this['id'] = id;
    _this['timeCreated'] = timeCreated;
    _this['researchId'] = researchId;
    _this['mediaId'] = mediaId;
    _this['respondentId'] = respondentId;
    _this['userId'] = userId;
    _this['complete'] = complete;
    _this['used'] = used;
    _this['company_id'] = companyId;
  };

  /**
   * Constructs a <code>Response</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Response} obj Optional instance to populate.
   * @return {module:model/Response} The populated <code>Response</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'Integer');
      }
      if (data.hasOwnProperty('timeCreated')) {
        obj['timeCreated'] = ApiClient.convertToType(data['timeCreated'], 'Date');
      }
      if (data.hasOwnProperty('researchId')) {
        obj['researchId'] = ApiClient.convertToType(data['researchId'], 'Integer');
      }
      if (data.hasOwnProperty('mediaId')) {
        obj['mediaId'] = ApiClient.convertToType(data['mediaId'], 'Integer');
      }
      if (data.hasOwnProperty('respondentId')) {
        obj['respondentId'] = ApiClient.convertToType(data['respondentId'], 'Integer');
      }
      if (data.hasOwnProperty('userId')) {
        obj['userId'] = ApiClient.convertToType(data['userId'], 'Integer');
      }
      if (data.hasOwnProperty('complete')) {
        obj['complete'] = ApiClient.convertToType(data['complete'], 'Boolean');
      }
      if (data.hasOwnProperty('used')) {
        obj['used'] = ApiClient.convertToType(data['used'], 'Boolean');
      }
      if (data.hasOwnProperty('company_id')) {
        obj['company_id'] = ApiClient.convertToType(data['company_id'], 'Integer');
      }
    }
    return obj;
  }

  /**
   * 
   * @member {Integer} id
   */
  exports.prototype['id'] = undefined;
  /**
   * 
   * @member {Date} timeCreated
   */
  exports.prototype['timeCreated'] = undefined;
  /**
   * 
   * @member {Integer} researchId
   */
  exports.prototype['researchId'] = undefined;
  /**
   * 
   * @member {Integer} mediaId
   */
  exports.prototype['mediaId'] = undefined;
  /**
   * 
   * @member {Integer} respondentId
   */
  exports.prototype['respondentId'] = undefined;
  /**
   * 
   * @member {Integer} userId
   */
  exports.prototype['userId'] = undefined;
  /**
   * 
   * @member {Boolean} complete
   */
  exports.prototype['complete'] = undefined;
  /**
   * 
   * @member {Boolean} used
   */
  exports.prototype['used'] = undefined;
  /**
   * 
   * @member {Integer} company_id
   */
  exports.prototype['company_id'] = undefined;



  return exports;
}));


